<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Verifier</title>
    <link rel="stylesheet" type="text/css" href="/verifier_form/verifier_form.css" />
</head>

<body>
    <!-- Registration Section -->
    <section class="registration-section">
        <div class="registration-container">
            <div class="form-card">
                <div class="form-header">
                    <h2>Add New Verifier</h2>
                    <p>Create a new content verifier account</p>
                </div>
                
                <div id="message" class="message"></div>
                
                <form id="verifierForm" class="registration-form">
    <div class="form-group">
        <label for="name">Full Name *</label>
        <input type="text" id="name" name="name" placeholder="Enter full name" required>
    </div>
    
    <div class="form-group">
        <label for="email">Email Address *</label>
        <input type="email" id="email" name="email" placeholder="Enter email address" required>
    </div>
    
    <div class="form-group">
        <label for="phone">Phone Number *</label>
        <input type="tel" id="phone" name="phone" placeholder="Enter phone number" required>
    </div>
    
    <div class="form-group">
        <label for="password">Password *</label>
        <input type="password" id="password" name="password" placeholder="Enter password" required>
    </div>
    
    <div class="form-group">
        <label for="experienceYears">Years of Experience *</label>
        <input type="number" id="experienceYears" name="experienceYears" min="1" 
               placeholder="Enter years of experience" required>
    </div>

    <button type="submit" class="submit-btn">Create Verifier</button>
</form>
            </div>
        </div>
    </section>

    <script>

        // Add these validation functions at the top of your script
function validateName(name) {
    return /^[A-Za-z\s]{2,50}$/.test(name); // 2-50 letters and spaces only
}

function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email); // Basic email format
}

function validatePassword(password) {
    return password.length >= 3; // At least 3 characters
}

function validatePhone(phone) {
    return /^\+?[\d\s-]{10}$/.test(phone); // Exactly 10 digits, may include +, spaces, or hyphens
}

function validateExperience(experience) {
    return experience >= 1 && experience <= 50; // 1-50 years
}


document.getElementById('verifierForm').addEventListener('submit', async function (event) {
    event.preventDefault();
    
    const submitBtn = this.querySelector('.submit-btn');
    const messageDiv = document.getElementById('message');
    const originalText = submitBtn.textContent;
    
    // Show loading state
    submitBtn.textContent = 'Creating...';
    submitBtn.disabled = true;
    messageDiv.style.display = 'none';
    
    try {
        // Get form values directly from inputs
        const name = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();
        const password = document.getElementById('password').value;
        const experienceYears = document.getElementById('experienceYears').value;
        
        console.log('Form values:', { name, email, phone, password, experienceYears }); // Debug log
        
        // Validate form data
        if (!validateName(name)) {
            throw new Error('Please enter a valid full name (2-50 letters and spaces only)');
        }
        
        if (!validateEmail(email)) {
            throw new Error('Please enter a valid email address');
        }
        
        if (!validatePhone(phone)) {
            throw new Error('Please enter a valid phone number (at least 10 digits)');
        }
        
        if (!validatePassword(password)) {
            throw new Error('Password must be at least 8 characters long');
        }
        
        if (!validateExperience(experienceYears)) {
            throw new Error('Experience must be between 1 and 50 years');
        }
        
        // Send as JSON instead of FormData to ensure all fields are included
        const response = await fetch('/admin/verifier', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                name: name,
                email: email,
                phone: phone,
                password: password,
                experienceYears: experienceYears
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Show success message
            messageDiv.textContent = 'Verifier created successfully!';
            messageDiv.className = 'message success';
            messageDiv.style.display = 'block';
            
            // Reset form
            this.reset();
            
            // Refresh parent page after delay
            setTimeout(() => {
                if (window.parent && window.parent.refreshVerifierList) {
                    window.parent.refreshVerifierList();
                }
                // Close modal
                if (window.parent && window.parent.document) {
                    const modal = window.parent.document.getElementById('addVerifierModal');
                    if (modal) {
                        modal.style.display = 'none';
                    }
                }
            }, 1500);

        } else {
            throw new Error(data.message || 'Failed to create verifier');
        }
        
    } catch (error) {
        console.error('Error:', error);
        messageDiv.textContent = error.message || 'Error creating verifier. Please try again.';
        messageDiv.className = 'message error';
        messageDiv.style.display = 'block';
    } finally {
        // Reset button state
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
    }
});


        // Real-time validation feedback
document.querySelectorAll('#verifierForm input').forEach(input => {
    input.addEventListener('blur', function() {
        validateField(this);
    });
});

function validateField(field) {
    const value = field.value.trim();
    let isValid = true;
    let errorMessage = '';
    
    switch(field.id) {
        case 'name':
            isValid = validateName(value);
            errorMessage = 'Name must be 2-50 letters and spaces only';
            break;
        case 'email':
            isValid = validateEmail(value);
            errorMessage = 'Please enter a valid email address';
            break;
        case 'phone':
            isValid = validatePhone(value);
            errorMessage = 'Please enter a valid phone number (10 digits)';
            break;
        case 'password':
            isValid = validatePassword(value);
            errorMessage = 'Password must be at least 3 characters';
            break;
        case 'experienceYears':
            isValid = validateExperience(value);
            errorMessage = 'Experience must be 1-50 years';
            break;
    }
    
    // Remove existing error styling
    field.classList.remove('error');
    const existingError = field.parentNode.querySelector('.field-error');
    if (existingError) {
        existingError.remove();
    }
    
    // Add error styling and message if invalid
    if (!isValid && value) {
        field.classList.add('error');
        const errorElement = document.createElement('div');
        errorElement.className = 'field-error';
        errorElement.textContent = errorMessage;
        errorElement.style.color = '#ff4444';
        errorElement.style.fontSize = '12px';
        errorElement.style.marginTop = '5px';
        field.parentNode.appendChild(errorElement);
    }
}

    </script>
</body>
</html>