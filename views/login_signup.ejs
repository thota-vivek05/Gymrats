<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GymRats - Login/Sign Up</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/login_signup/login_signup.css">

</head>

<body>
    <!-- Popup Modal -->
    <div id="errorModal" class="modal">
        <div class="modal-content">
            <div class="modal-header error">
                <button class="close-modal">&times;</button>
                <i class="fas fa-exclamation-triangle"></i>
                <h3>Error</h3>
            </div>
            <div class="modal-body">
                <p id="modalMessage">An error occurred. Please try again.</p>
            </div>
            <div class="modal-footer">
                <button class="modal-btn" onclick="closeModal()">OK</button>
            </div>
        </div>
    </div>

    <!-- Success Modal -->
    <div id="successModal" class="modal">
        <div class="modal-content">
            <div class="modal-header success">
                <button class="close-modal">&times;</button>
                <i class="fas fa-check-circle"></i>
                <h3>Success</h3>
            </div>
            <div class="modal-body">
                <p id="successMessage">Operation completed successfully.</p>
            </div>
            <div class="modal-footer">
                <button class="modal-btn" onclick="closeSuccessModal()">Continue</button>
            </div>
        </div>
    </div>

    <!-- Navigation Bar -->
    <div class="navbar">
        <header>
            <a href="/home" class="badge">GymRats</a>
            <div class="menu">
                <a href="/home">Home</a>
                <a href="/isolation">Exercises</a>
                <a href="/nutrition">Nutrition</a>
                <a href="/about">About</a>
                <a href="/contact">Contact</a>
            </div>
        </header>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="auth-container">
            <div class="auth-header">
                <h2>Welcome Back</h2>
                <p>Sign in to access your account</p>
            </div>

            <!-- Login Form -->
            <form id="loginForm">
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" class="form-control" id="password" placeholder="Enter your password"
                        required>
                </div>
                <!-- Brimstone 2 -->
                <!-- <div class="form-group">
                    <label for="loginMembershipPlan">Membership Plan</label>
                    <select class="form-control" id="loginMembershipPlan" name="loginMembershipPlan">
                        <option value="basic">Basic Plan</option>
                        <option value="gold">Gold Plan</option>
                        <option value="platinum">Platinum Plan</option>
                    </select>
                </div> -->
                <!-- Brimstone 2 -->
                <button type="submit" class="btn">Login</button>

                <div class="alternate-action">
                    Don't have an account? <a href="/login_signup?form=signup"
                        onclick="toggleForm('signup'); return false;">Sign Up</a>
                </div>
            </form>

            <!-- Signup Form -->
            <form id="signupForm" style="display: none;">
                <div id="userSignup" class="signup-type active">
                    <h3>Personal Details</h3>
                    <div class="form-group">
                        <label for="userFullName">Full Name</label>
                        <input type="text" class="form-control" id="userFullName" name="userFullName"
                            placeholder="Enter your full name" required>
                    </div>

                    <div class="form-group">
                        <label for="dateOfBirth">Date of Birth</label>
                        <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth" required>
                    </div>

                    <div class="form-group">
                        <label for="height">Height (cm)</label>
                        <input type="number" class="form-control" id="height" name="height"
                            placeholder="Enter your height in cm" min="50" max="250" required
                            value="<%= locals.height || '' %>" onchange="calculateBMI()">
                    </div>

                    <div class="form-group">
                        <label for="weight">Weight (kg)</label>
                        <input type="number" class="form-control" id="weight" name="weight"
                            placeholder="Enter your weight in kg" min="20" max="300" required
                            value="<%= locals.weight || '' %>" onchange="calculateBMI()">
                    </div>
                    <div class="form-group">
                        <label for="bmi">BMI</label>
                        <input type="number" class="form-control" id="bmi" name="bmi" readonly>
                    </div>
                    <!--Brimstone-->
                    <!-- Add this after the BMI section and before "Contact Information" -->
                    <h3>Fitness Goals</h3>
                    <div class="form-group">
                        <label for="workoutType">Preferred Workout Type</label>
                        <select class="form-control" id="workoutType" name="workoutType" required>
                            <option value="">Select your preferred workout type</option>
                            <option value="Calisthenics">Calisthenics</option>
                            <option value="Weight Loss">Weight Loss</option>
                            <option value="HIIT">HIIT</option>
                            <option value="Competitive">Competitive</option>
                            <option value="Strength Training">Strength Training</option>
                            <option value="Cardio">Cardio</option>
                            <option value="Flexibility">Flexibility & Mobility</option>
                            <option value="Bodybuilding">Bodybuilding</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="weightGoal">Weight Goal (kg)</label>
                        <input type="number" class="form-control" id="weightGoal" name="weightGoal"
                            placeholder="Enter your target weight" min="20" max="300" required>
                    </div>
                    <!--Brimstone-->
                    <div class="form-group">
                        <label for="gender">Gender</label>
                        <select class="form-control" id="gender" name="gender" required>
                            <option value="">Select</option>
                            <option value="male">Male</option>
                            <option value="female">Female</option>
                            <option value="other">Other</option>
                        </select>
                    </div>

                    <h3>Contact Information</h3>
                    <div class="form-group">
                        <label for="userEmail">Email Address</label>
                        <input type="email" class="form-control" id="userEmail" name="userEmail"
                            placeholder="Enter your email" required>
                    </div>

                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber"
                            placeholder="Enter your phone number" required>
                    </div>

                    <div class="form-group">
                        <label for="userPassword">Password</label>
                        <input type="password" class="form-control" id="userPassword" name="userPassword"
                            placeholder="Create a password" required>
                    </div>

                    <div class="form-group">
                        <label for="userConfirmPassword">Confirm Password</label>
                        <input type="password" class="form-control" id="userConfirmPassword"
                            placeholder="Confirm your password" required>
                    </div>

                    <h3>Membership Details</h3>
                    <div class="form-group">
                        <label for="membershipPlan">Membership Plan</label>
                        <select class="form-control" id="membershipPlan" name="membershipPlan" required>
                            <option value="">Select a plan</option>
                            <option value="basic">Basic Plan </option>
                            <option value="gold">Gold Plan </option>
                            <option value="platinum">Platinum Plan</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="membershipDuration">Membership Duration</label>
                        <select class="form-control" id="membershipDuration" name="membershipDuration" required>
                            <option value="1">1 Month</option>
                            <option value="3">3 Months</option>
                            <option value="6">6 Months</option>
                            <option value="12">12 Months</option>
                        </select>
                    </div>
                    <!-- Add this after the Membership Duration form group -->
                    <div class="form-group">
                        <label for="membershipPrice">Membership Price</label>
                        <div class="price-display" id="priceDisplay">
                            <p class="price-amount"></p>
                            <p class="save-info" id="saveInfo"></p>
                        </div>
                    </div>

                    <h3>Payment Information</h3>
                    <div class="form-group">
                        <label for="cardType">Card Type</label>
                        <select class="form-control" id="cardType" name="cardType" required>
                            <option value="">Select card type</option>
                            <option value="visa">Visa</option>
                            <option value="mastercard">Mastercard</option>
                            <option value="amex">American Express</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="cardNumber">Card Number</label>
                        <input type="text" class="form-control" id="cardNumber" name="cardNumber"
                            placeholder="Enter 16-digit card number" required>
                    </div>

                    <div class="form-group">
                        <label for="expirationDate">Expiration Date</label>
                        <input type="month" class="form-control" id="expirationDate" name="expirationDate" required>
                    </div>

                    <div class="form-group">
                        <label for="cvv">CVV</label>
                        <input type="text" class="form-control" id="cvv" placeholder="Enter CVV" maxlength="4" required>
                    </div>

                    <div class="form-group">
                        <label>
                            <input type="checkbox" id="terms" required>
                            I agree to the <a href="#" class="terms-link">terms and conditions</a>
                        </label>
                    </div>

                    <button type="submit" class="btn">Sign Up</button>

                    <div class="alternate-action">
                        Already have an account? <a href="/login_signup?form=login"
                            onclick="toggleForm('login'); return false;">Login</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <footer class="site-footer">
        <div class="footer-container">
            <div class="footer-column">
                <h4>Trainer</h4>
                <ul>
                    <li><a href="/trainer_login">Trainer Login</a></li>
                    <li><a href="/trainer_form">Become a Trainer</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h4>Verifier</h4>
                <ul>
                    <li><a href="/verifier_login">Verifier Login</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h4>Connect</h4>
                <div class="social-icons">
                    <a href="#"><img src="/home/icons8-facebook.svg" alt="Facebook"></a>
                    <a href="#"><img src="/home/icons8-instagram.svg" alt="Instagram"></a>
                    <a href="#"><img src="/home/icons8-youtube.svg" alt="YouTube"></a>
                </div>
                <p class="copyright">GymRats © 2025. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Modal Functions
        function showErrorModal(message) {
            const modal = document.getElementById('errorModal');
            const modalMessage = document.getElementById('modalMessage');
            modalMessage.textContent = message;
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function showSuccessModal(message) {
            const modal = document.getElementById('successModal');
            const successMessage = document.getElementById('successMessage');
            successMessage.textContent = message;
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            document.getElementById('errorModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        function closeSuccessModal() {
            document.getElementById('successModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        // Close modal when clicking outside
        window.onclick = function (event) {
            const errorModal = document.getElementById('errorModal');
            const successModal = document.getElementById('successModal');

            if (event.target === errorModal) {
                closeModal();
            }
            if (event.target === successModal) {
                closeSuccessModal();
            }
        }

        // Close modal with close button
        document.querySelectorAll('.close-modal').forEach(button => {
            button.addEventListener('click', function () {
                closeModal();
                closeSuccessModal();
            });
        });

        // Function to validate card number (exactly 16 digits)
        function validateCardNumber(cardNumber) {
            if (!cardNumber || typeof cardNumber !== 'string') {
                return false;
            }
            const cleanedCardNumber = cardNumber.replace(/[\s-]/g, '');
            return /^\d{16}$/.test(cleanedCardNumber);
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Check URL parameter to show the right form on page load
            const params = new URLSearchParams(window.location.search);
            const formType = params.get('form');
            if (formType === 'signup') {
                toggleForm('signup');
            }

            // Add card number input event listener for formatting
            const cardNumberInput = document.getElementById('cardNumber');
            if (cardNumberInput) {
                cardNumberInput.addEventListener('input', function (e) {
                    let value = e.target.value.replace(/\D/g, '');

                    if (value.length > 16) {
                        value = value.substring(0, 16);
                    }

                    let formattedValue = '';
                    for (let i = 0; i < value.length; i++) {
                        if (i > 0 && i % 4 === 0) {
                            formattedValue += ' ';
                        }
                        formattedValue += value[i];
                    }

                    e.target.value = formattedValue;
                });
            }

            // Handle login form submission
            document.getElementById('loginForm').addEventListener('submit', function (e) {
                e.preventDefault();

                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;
                //brimstone 3
                // const loginMembershipPlan = document.getElementById('loginMembershipPlan').value;
                // brimstone 3
                if (!email || !password) {
                    showErrorModal('Please fill in all fields');
                    return;
                }

                fetch('/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            email,
                            password

                        }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'Login successful') {
                            showSuccessModal('Login successful! Redirecting...');
                            setTimeout(() => {
                                window.location.href = data.redirect;
                            }, 1000);
                            this.reset();
                        } else {
                            showErrorModal(data.error || 'Login failed. Please try again.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showErrorModal('An error occurred. Please try again later.');
                    });
            });

            // Validate phone number
            function validatePhone(phone) {
                return /^\+?[\d\s-]{10,}$/.test(phone);
            }

            // Validate matching passwords
            function validatePasswords(password, confirmPassword) {
                return password === confirmPassword;
            }

            // Handle signup form submission
            document.getElementById('signupForm').addEventListener('submit', function (e) {
                e.preventDefault();

                const userFullName = document.getElementById('userFullName').value;
                const dateOfBirth = document.getElementById('dateOfBirth').value;
                const gender = document.getElementById('gender').value;
                const userEmail = document.getElementById('userEmail').value;
                const phoneNumber = document.getElementById('phoneNumber').value;
                const userPassword = document.getElementById('userPassword').value;
                const userConfirmPassword = document.getElementById('userConfirmPassword').value;
                const membershipPlan = document.getElementById('membershipPlan').value;
                const membershipDuration = document.getElementById('membershipDuration').value;
                const cardType = document.getElementById('cardType').value;
                const cardNumber = document.getElementById('cardNumber').value;
                const expirationDate = document.getElementById('expirationDate').value;
                const cvv = document.getElementById('cvv').value;
                const terms = document.getElementById('terms').checked;
                const weight = document.getElementById('weight').value;
                const height = document.getElementById('height').value;
                // Brimstone
                const workoutType = document.getElementById('workoutType').value;
                const weightGoal = document.getElementById('weightGoal').value;
                // Brimstone
                // Validate form data
                if (!userFullName || !dateOfBirth || !gender || !userEmail || !phoneNumber || !
                    userPassword ||
                    !userConfirmPassword || !membershipPlan || !membershipDuration || !cardType ||
                    !cardNumber || !expirationDate || !cvv) {
                    showErrorModal('Please fill in all fields');
                    return;
                }

                if (!validatePhone(phoneNumber)) {
                    showErrorModal(
                        'Please enter a valid phone number (at least 10 digits, may include +, spaces, or hyphens)'
                    );
                    return;
                }
                // Brimstone
                if (!workoutType) {
                    showErrorModal('Please select your preferred workout type');
                    return;
                }
                const validWorkoutTypes = ['Calisthenics', 'Weight Loss', 'HIIT', 'Competitive',
                    'Strength Training', 'Cardio', 'Flexibility', 'Bodybuilding'
                ];
                if (!validWorkoutTypes.includes(workoutType)) {
                    showErrorModal('Please select a valid workout type');
                    return;
                }

                if (isNaN(weightGoal) || weightGoal < 20 || weightGoal > 300) {
                    showErrorModal('Please enter a valid weight goal between 20 and 300 kg');
                    return;
                }
                // Brimstone
                if (!validatePasswords(userPassword, userConfirmPassword)) {
                    showErrorModal(
                        'Passwords do not match. Please enter the same password in both fields.');
                    return;
                }

                if (!validateCardNumber(cardNumber)) {
                    showErrorModal('Please enter a valid 16-digit card number');
                    return;
                }

                if (!terms) {
                    showErrorModal('You must agree to the terms and conditions');
                    return;
                }

                if (isNaN(weight) || weight < 20 || weight > 300) {
                    showErrorModal('Please enter a valid weight between 20 and 300 kg');
                    return;
                }

                if (height && (isNaN(height) || height < 50 || height > 250)) {
                    showErrorModal('Please enter a valid height between 50 and 250 cm');
                    return;
                }

                fetch('/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            userFullName,
                            dateOfBirth,
                            gender,
                            userEmail,
                            phoneNumber,
                            userPassword,
                            userConfirmPassword,
                            membershipPlan,
                            membershipDuration,
                            cardType,
                            cardNumber: cardNumber.replace(/[\s-]/g, ''),
                            expirationDate,
                            cvv,
                            terms,
                            weight,
                            height,
                            // Brimstone
                            workoutType, // ADD THIS
                            weightGoal
                            // Brimstone
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'Signup successful') {
                            showSuccessModal('Registration successful! Welcome to GymRats!');
                            setTimeout(() => {
                                window.location.href = data.redirect;
                            }, 1000);
                            this.reset();
                        } else if (data.error && data.error.includes('email') || data.error && data
                            .error.includes('already')) {
                            showErrorModal(
                                'This email is already registered. Please use a different email or try logging in.'
                            );
                        } else {
                            showErrorModal(data.error || 'Registration failed. Please try again.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showErrorModal('An error occurred. Please try again later.');
                    });
            });
        });

        // Function to toggle between login and signup forms
        function toggleForm(type) {
            const loginForm = document.getElementById('loginForm');
            const signupForm = document.getElementById('signupForm');
            const header = document.querySelector('.auth-header h2');
            const subheader = document.querySelector('.auth-header p');

            if (type === 'signup') {
                loginForm.style.display = 'none';
                signupForm.style.display = 'block';
                header.textContent = 'Create Account';
                subheader.textContent = 'Sign up to join our community';
            } else {
                loginForm.style.display = 'block';
                signupForm.style.display = 'none';
                header.textContent = 'Welcome Back';
                subheader.textContent = 'Sign in to access your account';
            }
        }

        function calculateBMI() {
            const height = parseFloat(document.getElementById('height').value);
            const weight = parseFloat(document.getElementById('weight').value);
            const bmiField = document.getElementById('bmi');

            if (!height || !weight || height <= 0 || weight <= 0) {
                bmiField.value = '';
                return;
            }

            const heightInMeters = height / 100;
            const bmi = weight / (heightInMeters * heightInMeters);
            bmiField.value = bmi.toFixed(1);
        }//brimstone
        // Add this JavaScript code to your existing script section

        // Price configuration based on your renewal options
        const priceConfig = {
            basic: {
                1: {
                    price: 299,
                    save: ''
                },
                3: {
                    price: 750,
                    save: 'Save 15%'
                },
                6: {
                    price: 1350,
                    save: 'Save 25%'
                },
                12: {
                    price: 2400,
                    save: 'Save 33%'
                } // Assuming 12 months for annual
            },
            gold: {
                1: {
                    price: 599,
                    save: ''
                },
                3: {
                    price: 1550,
                    save: 'Save 15%'
                },
                6: {
                    price: 2700,
                    save: 'Save 25%'
                },
                12: {
                    price: 4800,
                    save: 'Save 33%'
                } // Assuming 12 months for annual
            },
            platinum: {
                1: {
                    price: 999,
                    save: ''
                },
                3: {
                    price: 2500,
                    save: 'Save 15%'
                },
                6: {
                    price: 4500,
                    save: 'Save 25%'
                },
                12: {
                    price: 8000,
                    save: 'Save 33%'
                } // Assuming 12 months for annual
            }
        };

        // Function to calculate and display price
        // Updated calculatePrice function with enhanced styling
        function calculatePrice() {
            const membershipPlan = document.getElementById('membershipPlan').value;
            const membershipDuration = document.getElementById('membershipDuration').value;
            const priceDisplay = document.getElementById('priceDisplay');
            const saveInfo = document.getElementById('saveInfo');

            if (!membershipPlan || !membershipDuration) {
                priceDisplay.innerHTML = '<p class="price-amount">Select membership plan and duration to see price</p>';
                priceDisplay.classList.remove('has-price');
                saveInfo.textContent = '';
                return;
            }

            const duration = parseInt(membershipDuration);
            const planData = priceConfig[membershipPlan];

            if (planData && planData[duration]) {
                const priceInfo = planData[duration];
                priceDisplay.innerHTML = `
            <p class="price-amount">₹${priceInfo.price}</p>
        `;
                priceDisplay.classList.add('has-price');

                // Add animation for price update
                priceDisplay.classList.add('price-update');
                setTimeout(() => {
                    priceDisplay.classList.remove('price-update');
                }, 300);

                saveInfo.textContent = priceInfo.save;

                // Style savings information
                if (priceInfo.save) {
                    saveInfo.style.color = '#4ecdc4';
                    saveInfo.style.fontWeight = '600';
                    saveInfo.style.marginTop = '8px';
                    saveInfo.style.textShadow = '0 0 5px rgba(78, 205, 196, 0.3)';
                } else {
                    saveInfo.textContent = '';
                }
            }
        }

        // Add event listeners to membership plan and duration dropdowns
        document.addEventListener('DOMContentLoaded', function () {
            const membershipPlan = document.getElementById('membershipPlan');
            const membershipDuration = document.getElementById('membershipDuration');

            if (membershipPlan) {
                membershipPlan.addEventListener('change', calculatePrice);
            }

            if (membershipDuration) {
                membershipDuration.addEventListener('change', calculatePrice);
            }

            // Initialize price display
            calculatePrice();
        });
        //brimstone
    </script>
</body>
     <!-- TRYING TO ADD ANVESH CODE -->
</html>