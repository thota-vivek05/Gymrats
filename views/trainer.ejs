<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GymRats - Trainer Dashboard</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/trainer/trainer.css" />
</head>

<body>
    <!-- Navigation -->
    <div class="main-navbar">
        <header>
            <div class="brand-logo">
                <a href="/home" class="brand-name">GymRats</a>
            </div>
            <div class="nav-menu">
                <a href="/home">Home</a>
                <a href="/isolation">Exercises</a>
                <a href="/nutrition">Nutrition</a>
                <a href="/about">About</a>
                <a href="/contact">Contact</a>
            </div>
            <div class="right-container">
                <div class="search-container">
                    <img src="/trainer/icons8-search.svg" height="18px" alt="Search Icon" />
                    <input type="text" placeholder="Search..." size="20" style="font-size: 14px;" />
                </div>
                <div class="login-button">
                    <a href="/trainer_login">Logout</a>
                </div>
            </div>
            <div class="mobile-menu-icon" id="menuIcon">
                <img src="/trainer/menu.jpg" alt="Menu" height="25px" />
            </div>
        </header>
    </div>

    <!-- Mobile Side Navigation -->
    <div class="mobile-sidebar" id="sideNavbar">
        <a href="javascript:void(0)" class="close-button" id="closeBtn">Ã—</a>
        <a href="/home">Home</a>
        <a href="/isolation">Exercises</a>
        <a href="/nutrition">Nutrition</a>
        <a href="/about">About</a>
        <a href="/contact">Contact</a>
        <a href="/trainer_login">Logout</a>
    </div>

    <!-- Welcome Banner -->
    <div class="welcome-banner">
        <h1>Welcome, <%= trainer.name %></h1>
        <p>Manage your clients and track their progress</p>

        <!-- REYNA -->
        <a href="/trainer/assignment" class="btn" style="margin-top: 10px; display: inline-block;">
            View Available Clients
        </a>
        <!-- END REYNA -->
    </div>

    <!-- Main Content Area -->
    <div class="main-content">
        <!-- Client List -->
        <div class="client-list-container">
            <h2>Client List</h2>
            <!-- In client list section - Replace the client-item div with this: -->
            <div class="client-list">
                <% if (clients.length === 0) { %>
                <p>No clients assigned yet.</p>
                <% } else { %>
                <% clients.forEach((client, index) => { %>
                <div class="client-item <%= index === 0 ? 'active' : '' %>" data-client="<%= client.id %>">
                    <div class="client-name">
                        <%= client.name %>
                        <span
                            class="membership-badge membership-<%= client.membershipType ? client.membershipType.toLowerCase() : 'basic' %>">
                            <%= client.membershipType || 'Basic' %>
                        </span>
                    </div>
                    <div class="client-stats">
                        <span>Progress: <span class="progress-value"><%= client.progress %></span>%</span>
                        <span>Next Session: <%= client.nextSession %></span>
                    </div>
                </div>
                <% }) %>
                <% } %>
            </div>
        </div>

        <!-- Client Details Container -->
        <div class="client-details-container">
            <!-- Top row -->
            <div class="top-row">
                <!-- Client Profile -->
                <div class="client-profile">
                    <h2>Client Profile: <span id="clientNameDisplay">
                            <%= selectedClient ? selectedClient.name : 'Select a client' %>
                        </span></h2>
                    <div class="profile-stats" id="clientProfileStats">
                        <div class="stat-item">
                            <span class="stat-label">Age:</span>
                            <span class="stat-value"
                                id="clientAge"><%= selectedClient ? (selectedClient.age || 'N/A') : 'N/A' %></span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Weight:</span>
                            <span class="stat-value"
                                id="clientWeight"><%= selectedClient ? (selectedClient.weight || 'N/A') : 'N/A' %></span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Height:</span>
                            <span class="stat-value"
                                id="clientHeight"><%= selectedClient ? (selectedClient.height || 'N/A') : 'N/A' %></span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Body Fat:</span>
                            <span class="stat-value"
                                id="clientBodyFat"><%= selectedClient ? (selectedClient.bodyFat || 'N/A') : 'N/A' %></span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Goal:</span>
                            <span class="stat-value"
                                id="clientGoal"><%= selectedClient ? (selectedClient.goal || 'N/A') : 'N/A' %></span>
                        </div>
                    </div>
                    <% if (selectedClient && selectedClient.membershipType === 'Platinum') { %>
                    <button class="btn meet-button"
                        onclick="window.open('https://meet.google.com/xyz-abcd-123', '_blank')">Join Google
                        Meet</button>
                    <% } else if (selectedClient) { %>
                    <button class="btn meet-button" disabled>Google Meet (Platinum Only)</button>
                    <% } else { %>
                    <button class="btn meet-button" disabled>Join Google Meet</button>
                    <% } %>
                </div>

                <!-- Weekly Workout Schedule -->
                <div class="workout-plan">
                    <h2>Weekly Workout Schedule</h2>
                    <div class="weekly-schedule" id="weeklySchedule">
                        <% if (!selectedClient) { %>
                        <p>Select a client to view their weekly workout schedule.</p>
                        <% } else if (workoutData && workoutData.weeklySchedule) { %>
                        <% const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; %>
                        <% days.forEach(day => { %>
                        <div class="day-schedule">
                            <h3><%= day %></h3>
                            <% if (workoutData.weeklySchedule[day].length === 0) { %>
                            <p>No exercises scheduled.</p>
                            <% } else { %>
                            <div class="exercises-list">
                                <% workoutData.weeklySchedule[day].forEach((exercise, index) => { %>
                                <div class="exercise-item">
                                    <span class="exercise-name"><%= index + 1 %>. <%= exercise.name %></span>
                                    <span class="exercise-details">
                                        <% let details = ''; %>
                                        <% if (exercise.sets && exercise.reps) { %>
                                        <%= `${exercise.sets} sets x ${exercise.reps} reps` %>
                                        <% details = `${exercise.sets} sets x ${exercise.reps} reps`; %>
                                        <% } else if (exercise.duration) { %>
                                        <%= `${exercise.duration} seconds` %>
                                        <% details = `${exercise.duration} seconds`; %>
                                        <% } %>
                                        <% if (exercise.weight) { %>
                                        <%= details ? `, ${exercise.weight} kg` : `${exercise.weight} kg` %>
                                        <% details += details ? `, ${exercise.weight} kg` : `${exercise.weight} kg`; %>
                                        <% } %>
                                    </span>
                                </div>
                                <% }) %>
                            </div>
                            <% } %>
                        </div>
                        <% }) %>
                        <% } else { %>
                        <p>No workout plan for this week.</p>
                        <% } %>
                    </div>
                    <a id="editWorkoutPlanLink"
                        href="<%= selectedClient ? `/edit_workout_plan/${selectedClient.id}` : '#' %>"
                        class="btn <%= !selectedClient ? 'disabled' : '' %>">Edit Workout Plan</a>
                </div>
            </div>

            <!-- Current Stats -->
            <div class="current-stats">
                <h2>Current Stats</h2>
                <div class="stats-grid" id="statsGrid">
                    <div class="stat-box">
                        <h3>Total Workouts Completed</h3>
                        <p class="stat-value" id="workoutsCompletedStat">0</p>
                    </div>
                    <div class="stat-box">
                        <h3>Average Calories Consumed</h3>
                        <p class="stat-value" id="avgCaloriesStat">0 kcal</p>
                    </div>
                    <div class="stat-box">
                        <h3>Protein Intake vs Goal</h3>
                        <p class="stat-value" id="proteinVsGoalStat">0g / 0g</p>
                    </div>
                </div>
                <h3>Exercise Progress Timeline</h3>
                <div class="chart-container">
                    <canvas id="exerciseChart"></canvas>
                </div>
            </div>

           
                <!-- Nutrition Plan - Gold & Platinum Only -->
                <% if (selectedClient && (selectedClient.membershipType === 'Gold' || selectedClient.membershipType === 'Platinum')) { %>
                <!-- Nutrition Plan - Will be dynamically updated -->
<div class="nutrition-plan" id="nutritionSection">
    <h2>Food Intake</h2>
    <div class="nutrition-goal">
        <p>Today's protein goal: <span id="proteinGoal">N/A</span></p>
        <p>Calories: <span id="calorieGoal">N/A</span></p>
    </div>
    <h3>Foods to Take:</h3>
    <div class="foods-to-take" id="foodsList">
        <p>Select a client to view nutrition plan.</p>
    </div>
    <div class="goals-reached">
        <p>Food goals not set.</p>
    </div>
    <h3>Nutritional Breakdown</h3>
    <div class="pie-chart-container">
        <canvas id="nutritionChart"></canvas>
    </div>
    <a id="editNutritionPlanLink" href="#" class="btn disabled">Edit Nutrition Plan</a>
</div>

                <% } else if (selectedClient) { %>
                <!-- Basic User - Show disabled nutrition section -->
                <div class="nutrition-plan disabled-section">
                    <h2>Food Intake</h2>
                    <div class="upgrade-message">
                        <p>ðŸ¥— Nutrition plans are available for Gold and Platinum members</p>
                        <p class="upgrade-info">Upgrade to Gold or Platinum to access personalized nutrition plans</p>
                    </div>
                    <button class="btn" disabled>Edit Nutrition Plan</button>
                </div>
                <% } else { %>
                <!-- No client selected -->
                <div class="nutrition-plan">
                    <h2>Food Intake</h2>
                    <p>Select a client to view nutrition plan.</p>
                    <a id="editNutritionPlanLink" href="#" class="btn disabled">Edit Nutrition Plan</a>
                </div>
                <% } %>
            
        </div>
    </div>

    <!-- Footer -->
    <footer class="site-footer">
        <div class="footer-content">
            <div class="footer-column">
                <h3>GymRats</h3>
                <ul>
                    <li><a href="/about">About Us</a></li>
                    <li><a href="/trainers">Our Trainers</a></li>
                    <li><a href="/testimonial">Testimonials</a></li>
                    <li><a href="/blog">Blog</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h3>Resources</h3>
                <ul>
                    <li><a href="/isolation">Exercise Guide</a></li>
                    <li><a href="/nutrition">Nutrition Tips</a></li>
                    <li><a href="/workout_plans">Workout Plans</a></li>
                    <li><a href="/calculators">Calculators</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h3>Support</h3>
                <ul>
                    <li><a href="/contact">Contact Us</a></li>
                    <li><a href="/about">About us</a></li>
                    <li><a href="/terms">Terms of Service</a></li>
                    <li><a href="/privacy_policy">Privacy Policy</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h3>Connect With Us</h3>
                <ul>
                    <li><a href="/trainer_form">Become a Trainer</a></li>
                    <li><a href="/verifier_login">Become a Verifier</a></li>
                </ul>
                <div class="social-icons">
                    <a href="#"><img src="/trainer/icons8-facebook.svg" alt="Facebook" height="24"></a>
                    <a href="#"><img src="/trainer/icons8-instagram.svg" alt="Instagram" height="24"></a>
                    <a href="#"><img src="/trainer/icons8-youtube.svg" alt="YouTube" height="24"></a>
                </div>
            </div>
        </div>
    </footer>

    <script>
    // âœ… COMPLETE DOM Ready Wrapper
    document.addEventListener('DOMContentLoaded', function() {
        // Mobile menu functionality
        const menuIcon = document.getElementById('menuIcon');
        const closeBtn = document.getElementById('closeBtn');
        const sideNavbar = document.getElementById('sideNavbar');

        if (menuIcon && closeBtn && sideNavbar) {
            menuIcon.addEventListener('click', function() {
                sideNavbar.style.width = "250px";
            });

            closeBtn.addEventListener('click', function() {
                sideNavbar.style.width = "0";
            });
        }

        // Chart.js initialization
        let exerciseChart, nutritionChart;

        const exerciseCtx = document.getElementById('exerciseChart');
        if (exerciseCtx) {
            exerciseChart = new Chart(exerciseCtx.getContext('2d'), {
                type: 'line',
                data: {
                    labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5', 'Week 6'],
                    datasets: [{
                            label: 'Bicep Curls (kg)',
                            data: [0, 0, 0, 0, 0, 0],
                            borderColor: '#8A2BE2',
                            backgroundColor: 'rgba(138, 43, 226, 0.1)',
                            tension: 0.3
                        },
                        {
                            label: 'Deadlift (kg)',
                            data: [0, 0, 0, 0, 0, 0],
                            borderColor: '#20B2AA',
                            backgroundColor: 'rgba(32, 178, 170, 0.1)',
                            tension: 0.3
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                color: '#333'
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.1)'
                            },
                            ticks: {
                                color: '#333'
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(0, 0, 0, 0.1)'
                            },
                            ticks: {
                                color: '#333'
                            }
                        }
                    }
                }
            });
        }

        const nutritionCtx = document.getElementById('nutritionChart');
        if (nutritionCtx) {
            nutritionChart = new Chart(nutritionCtx.getContext('2d'), {
                type: 'doughnut',
                data: {
                    labels: ['Protein', 'Carbs', 'Fats'],
                    datasets: [{
                        data: [0, 0, 0],
                        backgroundColor: ['#8A2BE2', '#20B2AA', '#FF6347'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: '#333',
                                padding: 10
                            }
                        }
                    }
                }
            });
        }

        // Client selection
        document.querySelectorAll('.client-item').forEach(item => {
            item.addEventListener('click', async function() {
                // Remove active class from all clients
                document.querySelectorAll('.client-item').forEach(client => {
                    client.classList.remove('active');
                });
                // Add active class to clicked client
                this.classList.add('active');
                
                const clientId = this.dataset.client;
                console.log("Selected client: " + clientId);

                // Update edit buttons
                const editWorkoutPlanLink = document.getElementById('editWorkoutPlanLink');
                const editNutritionPlanLink = document.getElementById('editNutritionPlanLink');

                const meetButton = document.querySelector('.meet-button');
                
                if (editWorkoutPlanLink) {
                    editWorkoutPlanLink.href = `/edit_workout_plan/${clientId}`;
                    editWorkoutPlanLink.classList.remove('disabled');
                }
                
                if (editNutritionPlanLink) {
                    editNutritionPlanLink.href = `/edit_nutritional_plan/${clientId}`;
                    editNutritionPlanLink.classList.remove('disabled');
                }
                
                if (meetButton) {
                    meetButton.disabled = false;
                }

                // Show loading state
                const updateElementText = (id, text) => {
                    const element = document.getElementById(id);
                    if (element) element.textContent = text;
                };

                updateElementText('clientNameDisplay', 'Loading...');
                updateElementText('clientAge', 'Loading...');
                updateElementText('clientWeight', 'Loading...');
                updateElementText('clientHeight', 'Loading...');
                updateElementText('clientBodyFat', 'Loading...');
                updateElementText('clientGoal', 'Loading...');
                
                const weeklyScheduleDiv = document.getElementById('weeklySchedule');
                if (weeklyScheduleDiv) {
                    weeklyScheduleDiv.innerHTML = '<p>Loading weekly schedule...</p>';
                }
                
                updateElementText('workoutsCompletedStat', 'Loading...');
                updateElementText('avgCaloriesStat', 'Loading...');
                updateElementText('proteinVsGoalStat', 'Loading...');

                try {
                    // âœ… 1. Fetch client profile data
                    const clientResponse = await fetch(`/client/${clientId}`);
                    if (!clientResponse.ok) throw new Error('Client data fetch failed');
                    
                    const clientData = await clientResponse.json();
                    console.log("Client data:", clientData);

                    if (clientData.error) throw new Error(clientData.error);

                    // Update client profile
                    updateElementText('clientNameDisplay', clientData.name || 'N/A');
                    updateElementText('clientAge', clientData.age || 'N/A');
                    updateElementText('clientWeight', clientData.weight || 'N/A');
                    updateElementText('clientHeight', clientData.height || 'N/A');
                    updateElementText('clientBodyFat', clientData.bodyFat || 'N/A');
                    updateElementText('clientGoal', clientData.goal || 'N/A');

                    // Update meet button based on membership
                    if (meetButton) {
                        if (clientData.membershipType === 'Platinum') {
                            meetButton.disabled = false;
                            meetButton.textContent = 'Join Google Meet';
                            meetButton.onclick = () => window.open('https://meet.google.com/xyz-abcd-123', '_blank');
                        } else {
                            meetButton.disabled = true;
                            meetButton.textContent = 'Google Meet (Platinum Only)';
                            meetButton.onclick = null;
                        }
                    }

                    // âœ… 2. Fetch weekly workout schedule
                    const workoutResponse = await fetch(`/workout/${clientId}`);
                    if (!workoutResponse.ok) throw new Error('Workout data fetch failed');
                    
                    const workoutData = await workoutResponse.json();
                    console.log("DEBUG: Workout API Response:", workoutData);

                    const weeklyScheduleDiv = document.getElementById('weeklySchedule');
                    if (weeklyScheduleDiv) {
                        weeklyScheduleDiv.innerHTML = '';
                        
                        if (!workoutData || typeof workoutData !== 'object') {
                            console.error("DEBUG: Invalid workout data structure:", workoutData);
                            weeklyScheduleDiv.innerHTML = '<p>No workout plan for this week.</p>';
                        } else {
                            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
                            
                            days.forEach(day => {
                                const dayExercises = workoutData[day] || [];
                                const dayDiv = document.createElement('div');
                                dayDiv.className = 'day-schedule';
                                dayDiv.innerHTML = `<h3>${day}</h3>`;
                                
                                if (!dayExercises || dayExercises.length === 0) {
                                    dayDiv.innerHTML += '<p>No exercises scheduled.</p>';
                                } else {
                                    const exercisesList = document.createElement('div');
                                    exercisesList.className = 'exercises-list';
                                    
                                    dayExercises.forEach((exercise, index) => {
                                        const exerciseItem = document.createElement('div');
                                        exerciseItem.className = 'exercise-item';
                                        
                                        let details = '';
                                        if (exercise.sets && exercise.reps) {
                                            details = `${exercise.sets} sets x ${exercise.reps} reps`;
                                        } else if (exercise.duration) {
                                            details = `${exercise.duration} seconds`;
                                        }
                                        if (exercise.weight) {
                                            details += details ? `, ${exercise.weight} kg` : `${exercise.weight} kg`;
                                        }
                                        
                                        exerciseItem.innerHTML = `
                                            <span class="exercise-name">${index + 1}. ${exercise.name || 'Unnamed Exercise'}</span>
                                            <span class="exercise-details">${details || 'No details'}</span>
                                        `;
                                        exercisesList.appendChild(exerciseItem);
                                    });
                                    dayDiv.appendChild(exercisesList);
                                }
                                weeklyScheduleDiv.appendChild(dayDiv);
                            });
                        }
                    }

                    // âœ… 3. Handle nutrition section visibility
                    const nutritionSection = document.getElementById('nutritionSection');
                    if (nutritionSection && editNutritionPlanLink) {
    // Clear previous state
    nutritionSection.classList.remove('disabled-section');
    
    console.log("DEBUG: Client membership type for nutrition:", clientData.membershipType);
    
    if (clientData.membershipType === 'Gold' || clientData.membershipType === 'Platinum') {
        console.log("DEBUG: Showing nutrition section for Gold/Platinum user");
        
        // Enable the edit button for Gold/Platinum users
        editNutritionPlanLink.href = `/edit_nutritional_plan/${clientId}`;
        editNutritionPlanLink.classList.remove('disabled');
        
        // Fetch nutrition data for Gold/Platinum users
        try {
            const nutritionResponse = await fetch(`/nutrition/${clientId}`);
            if (!nutritionResponse.ok) throw new Error('Nutrition data fetch failed');
            
            const nutritionData = await nutritionResponse.json();
            console.log("Nutrition data:", nutritionData);

            const proteinGoal = document.getElementById('proteinGoal');
            const calorieGoal = document.getElementById('calorieGoal');
            const foodsList = document.getElementById('foodsList');
            
            if (nutritionData.error || !nutritionData.nutrition) {
                if (proteinGoal) proteinGoal.textContent = 'N/A';
                if (calorieGoal) calorieGoal.textContent = 'N/A';
                if (foodsList) foodsList.innerHTML = '<p>No foods assigned yet.</p>';
                if (nutritionChart) {
                    nutritionChart.data.datasets[0].data = [0, 0, 0];
                    nutritionChart.update();
                }
            } else {
                if (proteinGoal) proteinGoal.textContent = nutritionData.nutrition.protein_goal || 'N/A';
                if (calorieGoal) calorieGoal.textContent = nutritionData.nutrition.calorie_goal || 'N/A';
                
                if (foodsList) {
                    foodsList.innerHTML = '';
                    if (nutritionData.nutrition.foods && nutritionData.nutrition.foods.length > 0) {
                        nutritionData.nutrition.foods.forEach(food => {
                            const foodItem = document.createElement('p');
                            foodItem.textContent = `${food.name} (${food.protein}g protein, ${food.calories} kcal)`;
                            foodsList.appendChild(foodItem);
                        });
                    } else {
                        foodsList.innerHTML = '<p>No foods assigned yet.</p>';
                    }
                }
                
                // Update nutrition chart
                if (nutritionChart) {
                    nutritionChart.data.datasets[0].data = [
                        nutritionData.nutrition.macros.protein || 0,
                        nutritionData.nutrition.macros.carbs || 0,
                        nutritionData.nutrition.macros.fats || 0
                    ];
                    nutritionChart.update();
                }
            }
        } catch (nutritionError) {
            console.error('Error fetching nutrition data:', nutritionError);
            const foodsList = document.getElementById('foodsList');
            if (foodsList) foodsList.innerHTML = '<p>Error loading nutrition data.</p>';
        }
    } else {
        // Basic user - show upgrade message and disable edit button
        console.log("DEBUG: Hiding nutrition section for Basic user");
        nutritionSection.classList.add('disabled-section');
        
        // Disable the edit button for Basic users
        editNutritionPlanLink.href = "#";
        editNutritionPlanLink.classList.add('disabled');
        
        const proteinGoal = document.getElementById('proteinGoal');
        const calorieGoal = document.getElementById('calorieGoal');
        const foodsList = document.getElementById('foodsList');
        
        if (proteinGoal) proteinGoal.textContent = 'N/A';
        if (calorieGoal) calorieGoal.textContent = 'N/A';
        if (foodsList) {
            foodsList.innerHTML = `
                <div class="upgrade-message">
                    <p>ðŸ¥— Nutrition plans are available for Gold and Platinum members</p>
                    <p class="upgrade-info">Upgrade to Gold or Platinum to access personalized nutrition plans</p>
                </div>
            `;
        }
        
        if (nutritionChart) {
            nutritionChart.data.datasets[0].data = [0, 0, 0];
            nutritionChart.update();
        }
    }
}

                    // âœ… 4. Calculate and update stats
                    // Total Workouts Completed
                    let totalWorkoutsCompleted = 0;
                    if (workoutData) {
                        const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
                        days.forEach(day => {
                            const exercises = workoutData[day] || [];
                            totalWorkoutsCompleted += exercises.filter(ex => ex.completed).length;
                        });
                    }
                    updateElementText('workoutsCompletedStat', totalWorkoutsCompleted.toString());

                    // Note: You'll need to implement the calorie and protein calculations based on your data structure

                } catch (error) {
                    console.error('Error fetching client data:', error);
                    updateElementText('clientNameDisplay', 'Error loading client');
                    updateElementText('clientAge', 'N/A');
                    updateElementText('clientWeight', 'N/A');
                    updateElementText('clientHeight', 'N/A');
                    updateElementText('clientBodyFat', 'N/A');
                    updateElementText('clientGoal', 'N/A');
                    
                    const weeklyScheduleDiv = document.getElementById('weeklySchedule');
                    if (weeklyScheduleDiv) {
                        weeklyScheduleDiv.innerHTML = '<p>Error loading weekly schedule.</p>';
                    }
                    
                    updateElementText('workoutsCompletedStat', '0');
                    updateElementText('avgCaloriesStat', '0 kcal');
                    updateElementText('proteinVsGoalStat', '0g / 0g');
                    updateElementText('proteinGoal', 'N/A');
                    updateElementText('calorieGoal', 'N/A');
                    
                    const foodsList = document.getElementById('foodsList');
                    if (foodsList) {
                        foodsList.innerHTML = '<p>Error loading nutrition plan.</p>';
                    }
                    
                    if (exerciseChart) {
                        exerciseChart.data.datasets[0].data = [0, 0, 0, 0, 0, 0];
                        exerciseChart.data.datasets[1].data = [0, 0, 0, 0, 0, 0];
                        exerciseChart.update();
                    }
                    
                    if (nutritionChart) {
                        nutritionChart.data.datasets[0].data = [0, 0, 0];
                        nutritionChart.update();
                    }
                }
            });
        });

        // Trigger click on the first client if one exists
        const firstClient = document.querySelector('.client-item');
        if (firstClient) {
            firstClient.click();
        }
    });
</script>

</body>

</html>